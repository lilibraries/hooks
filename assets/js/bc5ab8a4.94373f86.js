"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[2543],{7030:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(7294);const o="exampleBlock_ywu8",s=e=>{let{children:t}=e;return r.createElement("div",{className:o},t)}},5342:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>m,default:()=>x,frontMatter:()=>d,metadata:()=>p,toc:()=>h});var r=n(7462),o=n(7294),s=n(3905),l=n(814),u=n(7030);const a=function(){const[,e]=(0,o.useState)({});return(0,o.useCallback)((()=>{e({})}),[])};let i=0;const c=function(){const e=a();return o.createElement(o.Fragment,null,o.createElement("button",{onClick:function(){i++,e()}},"+1")," ",i)},d={},m=void 0,p={unversionedId:"useRerender",id:"useRerender",title:"useRerender",description:"This hook returns a function that you can use to rerender the component. It is usually used to rerender mutable data.",source:"@site/docs/useRerender.mdx",sourceDirName:".",slug:"/useRerender",permalink:"/hooks/useRerender",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"usePersist",permalink:"/hooks/usePersist"},next:{title:"useThrottle",permalink:"/hooks/useThrottle"}},k={},h=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],f={toc:h};function x(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This hook returns a function that you can use to rerender the component. It is usually used to rerender mutable data."),(0,s.kt)("h2",{id:"api"},"API"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function useRerender(): () => void;\n")),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)(u.Z,{mdxType:"ExampleBlock"},(0,s.kt)(c,{mdxType:"Example"})),(0,s.kt)(l.Z,{language:"tsx",mdxType:"CodeBlock"},'import React from "react";\nimport { useRerender } from "@lilib/hooks";\n\nlet count = 0;\n\nfunction Example() {\n  const rerender = useRerender();\n\n  function handleClick() {\n    count++;\n    rerender();\n  }\n\n  return (\n    <>\n      <button onClick={handleClick}>+1</button> {count}\n    </>\n  );\n}\n\nexport default Example;\n'))}x.isMDXComponent=!0}}]);