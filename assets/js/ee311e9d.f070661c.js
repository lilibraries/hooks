(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return r})),t.d(n,"default",(function(){return p}));var o=t(3),u=t(7),s=(t(0),t(110)),a={},c={unversionedId:"useMount",id:"useMount",isDocsHomePage:!1,title:"useMount",description:"Run effect after the component is mounted.",source:"@site/docs/useMount.mdx",slug:"/useMount",permalink:"/hooks/useMount",version:"current",sidebar:"docs",previous:{title:"Getting Started",permalink:"/hooks/"},next:{title:"useUpdate",permalink:"/hooks/useUpdate"}},r=[{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]}],i={toc:r};function p(e){var n=e.components,t=Object(u.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Run effect after the component is mounted."),Object(s.b)("h2",{id:"usage"},"Usage"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-ts"},"function useMount(effect: () => void): void;\n")),Object(s.b)("h2",{id:"example"},"Example"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { useMount } from "@lilib/hooks";\n\nfunction Example() {\n  useMount(() => {\n    console.log("Component is mounted");\n  });\n  ...\n}\n')))}p.isMDXComponent=!0}}]);