(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return m})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return x}));var a=n(3),i=n(7),s=n(0),l=n.n(s),r=n(110),o=n(112),c=n(113);var u=function(){var e=Object(s.useState)(!1),t=e[0],n=e[1],a=Object(s.useState)(!1),i=a[0],r=a[1],o=Object(c.h)((function(){return r(!0)}))[0],u=Object(c.o)((function(){return n(!1)}),1e3)[0];return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",null,l.a.createElement("button",{onClick:function(){n(!0),o()}},"Show"),l.a.createElement("button",{onClick:function(){r(!1),u()}},"Hide")),l.a.createElement("div",{style:{display:t?"block":"none",opacity:i?1:0,transition:"opacity 1s ease"}},"Example text."))},b={},m={unversionedId:"useNextFrame",id:"useNextFrame",isDocsHomePage:!1,title:"useNextFrame",description:"Ensure the callback is invoked after the current paiting.",source:"@site/docs/useNextFrame.mdx",slug:"/useNextFrame",permalink:"/hooks/useNextFrame",version:"current",sidebar:"docs",previous:{title:"useIdle",permalink:"/hooks/useIdle"},next:{title:"useAnimation",permalink:"/hooks/useAnimation"}},p=[{value:"Usage",id:"usage",children:[{value:"Params",id:"params",children:[]},{value:"Results",id:"results",children:[]}]},{value:"Example",id:"example",children:[]}],d={toc:p};function x(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Ensure the callback is invoked after the current paiting."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"function useNextFrame(\n  callback: () => void\n): [start: () => void, cancel: () => void];\n")),Object(r.b)("h3",{id:"params"},"Params"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"callback"),":")," the function that will be invoked.")),Object(r.b)("h3",{id:"results"},"Results"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"start"),":")," schedule function."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"cancel"),":")," cancel function.")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(o.a,{mdxType:"ExampleBox"},Object(r.b)(u,{mdxType:"UseNextFrameExample"})),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},'import React, { useState } from "react";\nimport { useNextFrame, useTimeout } from "@lilib/hooks";\n\nfunction Example() {\n  const [display, setDisplay] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  const [startShow] = useNextFrame(() => setVisible(true));\n  const [startHide] = useTimeout(() => setDisplay(false), 1000);\n\n  function show() {\n    setDisplay(true);\n    startShow();\n  }\n\n  function hide() {\n    setVisible(false);\n    startHide();\n  }\n\n  return (\n    <>\n      <div>\n        <button onClick={show}>Show</button>\n        <button onClick={hide}>Hide</button>\n      </div>\n      <div\n        style={{\n          display: display ? "block" : "none",\n          opacity: visible ? 1 : 0,\n          transition: "opacity 1s ease",\n        }}\n      >\n        Example text.\n      </div>\n    </>\n  );\n}\n\nexport default Example;\n')))}x.isMDXComponent=!0}}]);