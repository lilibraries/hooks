(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{76:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return u})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return r})),t.d(n,"default",(function(){return p}));var a=t(3),o=t(7),s=(t(0),t(110)),u={},c={unversionedId:"useUpdate",id:"useUpdate",isDocsHomePage:!1,title:"useUpdate",description:"Run effect after the component is updated or the deps are changed, ignore on mount.",source:"@site/docs/useUpdate.mdx",slug:"/useUpdate",permalink:"/hooks/useUpdate",version:"current",sidebar:"docs",previous:{title:"useMount",permalink:"/hooks/useMount"},next:{title:"useUnmount",permalink:"/hooks/useUnmount"}},r=[{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]}],i={toc:r};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Run effect after the component is updated or the deps are changed, ignore on mount."),Object(s.b)("h2",{id:"usage"},"Usage"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-ts"},"function useUpdate(\n  effect: React.EffectCallback,\n  deps?: React.DependencyList\n): void;\n")),Object(s.b)("h2",{id:"example"},"Example"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { useUpdate } from "@lilib/hooks";\n\nfunction Example() {\n  const [signal, setSignal] = useState({});\n\n  useUpdate(() => {\n    console.log("Signal changed");\n  }, [signal]);\n\n  return <button onClick={() => setSignal({})}>Change signal</button>;\n}\n')))}p.isMDXComponent=!0}}]);