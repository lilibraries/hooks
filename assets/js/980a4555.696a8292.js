"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[1921],{8242:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=function(e){const t=(0,a.useRef)(e);return t.current=e,t}},4708:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),o=n(8242);const l=function(e){const t=(0,a.useRef)(),n=(0,o.Z)(e);return t.current||(t.current=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return n.current.apply(this,t)}),t.current}},8042:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(7294),o=n(4708),l=n(8134);const r=function(){const e=(0,a.useRef)(!1);return(0,l.Z)((()=>{e.current=!0})),e};const u=function(e){const t=r(),[n,l]=(0,a.useState)(e);return[n,(0,o.Z)((e=>{t.current||l(e)}))]}},8134:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=function(e){const t=(0,a.useRef)(e);t.current=e,(0,a.useEffect)((()=>()=>{t.current()}),[])}},2082:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=function(e){return function(t,n){const o=(0,a.useRef)(!1);e((()=>{if(o.current)return t();o.current=!0}),n)}}(a.useEffect)},8531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>S,contentTitle:()=>m,default:()=>g,frontMatter:()=>h,metadata:()=>v,toc:()=>k});var a=n(7462),o=n(7294),l=n(3905),r=n(3066),u=n(2823),s=n(2082),i=n(4708),c=n(8042);const d=function(e,t){const n=null!=t,[a,o]=(0,c.Z)(n?t:e);return(0,s.Z)((()=>{n&&o(t)}),[n,t]),[a,(0,i.Z)((e=>{n||o(e)}))]},p=(0,o.forwardRef)(((e,t)=>{const{value:n,defaultValue:l,onChange:r,...u}=e,[s,i]=d(l,n);return o.createElement("input",(0,a.Z)({},u,{ref:t,value:s,onChange:e=>{i(e.target.value),r&&r(e)}}))}));const f=function(){const[e,t]=(0,o.useState)("");return o.createElement(o.Fragment,null,o.createElement("div",null,"Uncontrolled input:"," ",o.createElement(p,{defaultValue:e,onChange:e=>{t(e.target.value)}})),o.createElement("div",null,"Controlled by the input above: ",o.createElement(p,{value:e})))},h={},m=void 0,v={unversionedId:"useControllableState",id:"useControllableState",title:"useControllableState",description:"The state returned by this hook can be controlled by controlledState parameter. If controlledState is not null and undefined, means the state of this hook is controlled, the returned state is exactly the same as controlledState, and calling the setState method has no effect. This hook is useful when wrapping form components.",source:"@site/docs/useControllableState.mdx",sourceDirName:".",slug:"/useControllableState",permalink:"/hooks/useControllableState",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"useSafeState",permalink:"/hooks/useSafeState"},next:{title:"useThrottledValue",permalink:"/hooks/useThrottledValue"}},S={},k=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],C={toc:k};function g(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The state returned by this hook can be controlled by ",(0,l.kt)("inlineCode",{parentName:"p"},"controlledState")," parameter. If ",(0,l.kt)("inlineCode",{parentName:"p"},"controlledState")," is not ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),", means the state of this hook is controlled, the returned state is exactly the same as ",(0,l.kt)("inlineCode",{parentName:"p"},"controlledState"),", and calling the ",(0,l.kt)("inlineCode",{parentName:"p"},"setState")," method has no effect. This hook is useful when wrapping form components."),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function useControllableState<S>(\n  defaultState: S,\n  controlledState?: S\n): readonly [state: S, setState: (newState: S) => void];\n\nfunction useControllableState<S = undefined>(): readonly [\n  state: S | undefined,\n  setState: (newState?: S | undefined) => void\n];\n")),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)(u.Z,{mdxType:"ExampleBlock"},(0,l.kt)(f,{mdxType:"Example"})),(0,l.kt)(r.Z,{language:"tsx",mdxType:"CodeBlock"},'import React, {\n  useState,\n  forwardRef,\n  HTMLAttributes,\n  ChangeEventHandler,\n} from "react";\nimport { useControllableState } from "@lilib/hooks";\n\ninterface InputProps extends HTMLAttributes<HTMLInputElement> {\n  value?: string;\n  defaultValue?: string;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n  const { value: valueProp, defaultValue, onChange, ...rest } = props;\n  const [value, setValue] = useControllableState(defaultValue, valueProp);\n\n  return (\n    <input\n      {...rest}\n      ref={ref}\n      value={value}\n      onChange={(event) => {\n        setValue(event.target.value);\n        if (onChange) {\n          onChange(event);\n        }\n      }}\n    />\n  );\n});\n\nfunction Example() {\n  const [value, setValue] = useState("");\n\n  return (\n    <>\n      <div>\n        Uncontrolled input:{" "}\n        <Input\n          defaultValue={value}\n          onChange={(event) => {\n            setValue(event.target.value);\n          }}\n        />\n      </div>\n      <div>\n        Controlled by the input above: <Input value={value} />\n      </div>\n    </>\n  );\n}\n\nexport default Example;\n'))}g.isMDXComponent=!0}}]);