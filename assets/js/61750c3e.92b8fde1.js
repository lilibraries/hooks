"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[1853],{2537:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},u=void 0,i={unversionedId:"useLayoutUpdate",id:"useLayoutUpdate",title:"useLayoutUpdate",description:"It's similar to useUpdate, except it uses useIsomorphicLayoutEffect internally.",source:"@site/docs/useLayoutUpdate.mdx",sourceDirName:".",slug:"/useLayoutUpdate",permalink:"/hooks/useLayoutUpdate",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"useLayoutMount",permalink:"/hooks/useLayoutMount"},next:{title:"useLayoutTargetEffect",permalink:"/hooks/useLayoutTargetEffect"}},l={},p=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],r={toc:p};function c(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"It's similar to ",(0,o.kt)("a",{parentName:"p",href:"./useUpdate"},(0,o.kt)("inlineCode",{parentName:"a"},"useUpdate")),", except it uses ",(0,o.kt)("a",{parentName:"p",href:"./useIsomorphicLayoutEffect"},(0,o.kt)("inlineCode",{parentName:"a"},"useIsomorphicLayoutEffect"))," internally."),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function useLayoutUpdate(\n  effect: React.EffectCallback,\n  deps?: React.DependencyList\n): void;\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { useLayoutUpdate } from "@lilib/hooks";\n\nfunction Example() {\n  const [signal, setSignal] = useState({});\n\n  useLayoutUpdate(() => {\n    console.log("Signal changed");\n  }, [signal]);\n\n  return <button onClick={() => setSignal({})}>Change signal</button>;\n}\n')))}c.isMDXComponent=!0}}]);