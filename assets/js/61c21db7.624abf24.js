"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[85],{92932:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var n=a(87462),s=(a(67294),a(3905));const o={},i=void 0,r={unversionedId:"useSafeState",id:"useSafeState",title:"useSafeState",description:"This hook is used in the same way as React.useState, expect that calling setState after the component is unmounted has no effect rather than throwing an error.",source:"@site/docs/useSafeState.mdx",sourceDirName:".",slug:"/useSafeState",permalink:"/hooks/useSafeState",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"useSetState",permalink:"/hooks/useSetState"},next:{title:"useMemoizedValue",permalink:"/hooks/useMemoizedValue"}},u={},l=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],p={toc:l};function c(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This hook is used in the same way as React.useState, expect that calling ",(0,s.kt)("inlineCode",{parentName:"p"},"setState")," after the component is unmounted has no effect rather than throwing an error."),(0,s.kt)("h2",{id:"api"},"API"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function useSafeState<S>(\n  initialState?: S | (() => S)\n): [\n  state: S | undefined,\n  setState: React.Dispatch<React.SetStateAction<S | undefined>>\n];\n")),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { useMount, useSafeState } from "@lilib/hooks";\n\nfunction Example() {\n  const [data, setData] = useSafeState<any>();\n\n  useMount(() => {\n    fetch("http://example.com/api/getData").then((response) => {\n      setData(response.json());\n    });\n  });\n\n  ...\n}\n')))}c.isMDXComponent=!0}}]);