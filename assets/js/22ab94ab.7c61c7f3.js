(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"metadata",(function(){return g})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return h}));var a=n(3),l=n(7),i=n(0),o=n.n(i),r=n(110),u=n(112),c=n(113);function s(){return Math.ceil(5e3*Math.random())}var b=function(){var e=Object(i.useState)(s()),t=e[0],n=e[1],a=Object(c.q)(!1),l=a[0],r=a[1].toggle,u=Object(c.q)(!0),b=u[0],d=u[1].toggle,g=Object(i.useState)(""),p=g[0],m=g[1],h={wait:t,leading:l,trailing:b},O=Object(c.n)(p,h),j=O[0],f=O[1],v=f.flush,T=f.cancel;return o.a.createElement(o.a.Fragment,null,o.a.createElement("p",null,"Actions:"," ",o.a.createElement("button",{onClick:function(){return n(s())}},"Change wait time"),o.a.createElement("button",{onClick:function(){return r()}},"Toggle leading"),o.a.createElement("button",{onClick:function(){return d()}},"Toggle trailing")),o.a.createElement("p",null,"Options:"," ","{ wait: "+t+", leading: "+l+", trailing: "+b+" }"),o.a.createElement("p",null,"Enter value:"," ",o.a.createElement("input",{value:p,onChange:function(e){m(e.target.value)}}),o.a.createElement("button",{onClick:function(){return v()}},"Flush"),o.a.createElement("button",{onClick:function(){return v("final value")}},'Flush with "final value"'),o.a.createElement("button",{onClick:T},"Cancel")),o.a.createElement("div",null,"Throttled value: ",j))},d={},g={unversionedId:"useThrottled",id:"useThrottled",isDocsHomePage:!1,title:"useThrottled",description:"Throttle a value.",source:"@site/docs/useThrottled.mdx",slug:"/useThrottled",permalink:"/hooks/useThrottled",version:"current",sidebar:"docs",previous:{title:"useDebounced",permalink:"/hooks/useDebounced"},next:{title:"usePersist",permalink:"/hooks/usePersist"}},p=[{value:"Usage",id:"usage",children:[{value:"Params",id:"params",children:[]},{value:"Results",id:"results",children:[]}]},{value:"Example",id:"example",children:[]}],m={toc:p};function h(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Throttle a value."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"function useThrottled<T = any>(\n  value: T,\n  options: number | { wait: number; leading?: boolean; trailing?: boolean }\n): [\n  throttledValue: T,\n  {\n    flush: (finalValue?: T) => void;\n    cancel: () => void;\n  }\n];\n")),Object(r.b)("h3",{id:"params"},"Params"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"value"),":")," the value that will be changed."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"options"),":")," throttle wait time or an options object.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"options.wait"),":")," throttle wait time, in milliseconds."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"options.leading"),":")," change throttledValue on the leading edge, default is false."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"options.trailing"),":")," change throttledValue on the trailing edge, default is true.")))),Object(r.b)("h3",{id:"results"},"Results"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"throttledValue"),":")," throttled value."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"flush"),":")," flush funciton. The finalValue will be returned as throttledValue if it is specified."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"cancel"),":")," cancel throttle timer.")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(u.a,{mdxType:"ExampleBox"},Object(r.b)(b,{mdxType:"UseThrottledExample"})),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},'import React, { useState } from "react";\nimport { useThrottled, useToggle } from "@lilib/hooks";\n\nfunction random() {\n  return Math.ceil(Math.random() * 5000);\n}\n\nfunction Example() {\n  const [wait, setWait] = useState(random());\n  const [leading, { toggle: toggleLeading }] = useToggle(false);\n  const [trailing, { toggle: toggleTrailing }] = useToggle(true);\n\n  const [value, setValue] = useState("");\n  const options = { wait, leading, trailing };\n  const [throttledValue, { flush, cancel }] = useThrottled(value, options);\n\n  return (\n    <>\n      <p>\n        Actions:{" "}\n        <button onClick={() => setWait(random())}>Change wait time</button>\n        <button onClick={() => toggleLeading()}>Toggle leading</button>\n        <button onClick={() => toggleTrailing()}>Toggle trailing</button>\n      </p>\n      <p>\n        Options:{" "}\n        {`{ wait: ${wait}, leading: ${leading}, trailing: ${trailing} }`}\n      </p>\n      <p>\n        Enter value:{" "}\n        <input\n          value={value}\n          onChange={(event) => {\n            setValue(event.target.value);\n          }}\n        />\n        <button onClick={() => flush()}>Flush</button>\n        <button onClick={() => flush("final value")}>\n          Flush with "final value"\n        </button>\n        <button onClick={cancel}>Cancel</button>\n      </p>\n      <div>Throttled value: {throttledValue}</div>\n    </>\n  );\n}\n\nexport default Example;\n')))}h.isMDXComponent=!0}}]);