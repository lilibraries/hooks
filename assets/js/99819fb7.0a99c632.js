(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return g})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return m})),n.d(t,"default",(function(){return h}));var a=n(3),l=n(7),o=n(0),r=n.n(o),i=n(110),c=n(112),u=n(113);function s(){return Math.ceil(5e3*Math.random())}var b=function(){var e=Object(o.useState)(s()),t=e[0],n=e[1],a=Object(u.q)(!1),l=a[0],i=a[1].toggle,c=Object(u.q)(!0),b=c[0],g=c[1].toggle,d=Object(o.useState)(""),m=d[0],p=d[1],h=Object(o.useState)(""),O=h[0],j=h[1],f=Object(u.m)((function(){j(m)}),{wait:t,leading:l,trailing:b}),T=f[0],k=f[1],v=k.flush,C=k.cancel;return Object(u.r)(T,[m]),r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"Actions:"," ",r.a.createElement("button",{onClick:function(){return n(s())}},"Change wait time"),r.a.createElement("button",{onClick:function(){return i()}},"Toggle leading"),r.a.createElement("button",{onClick:function(){return g()}},"Toggle trailing")),r.a.createElement("p",null,"Options:"," ","{ wait: "+t+", leading: "+l+", trailing: "+b+" }"),r.a.createElement("p",null,"Enter value:"," ",r.a.createElement("input",{value:m,onChange:function(e){p(e.target.value)}}),r.a.createElement("button",{onClick:function(){return v()}},"Flush"),r.a.createElement("button",{onClick:C},"Cancel")),r.a.createElement("div",null,"Throttled value: ",O))},g={},d={unversionedId:"useThrottle",id:"useThrottle",isDocsHomePage:!1,title:"useThrottle",description:"Use throttled callback.",source:"@site/docs/useThrottle.mdx",slug:"/useThrottle",permalink:"/hooks/useThrottle",version:"current",sidebar:"docs",previous:{title:"useDebounce",permalink:"/hooks/useDebounce"},next:{title:"useTimeout",permalink:"/hooks/useTimeout"}},m=[{value:"Usage",id:"usage",children:[{value:"Params",id:"params",children:[]},{value:"Results",id:"results",children:[]}]},{value:"Example",id:"example",children:[]}],p={toc:m};function h(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Use throttled callback."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"function useThrottle<T extends (...args: any[]) => any>(\n  callback: T,\n  options: number | { wait: number; leading?: boolean; trailing?: boolean }\n): [\n  throttledCallback: (...args: Parameters<T>) => ReturnType<T> | undefined,\n  {\n    flush: () => ReturnType<T> | undefined;\n    cancel: () => void;\n  }\n];\n")),Object(i.b)("h3",{id:"params"},"Params"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"callback"),":")," original callback function."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"options"),":")," throttle wait time or an options object.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"options.wait"),":")," throttle wait time, in milliseconds."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"options.leading"),":")," run callback on the leading edge, default is false."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"options.trailing"),":")," run callback on the trailing edge, default is true.")))),Object(i.b)("h3",{id:"results"},"Results"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"throttledCallback"),":")," throttled callback."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"flush"),":")," flush funciton, run callback immediately."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"cancel"),":")," cancel throttle timer.")),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)(c.a,{mdxType:"ExampleBox"},Object(i.b)(b,{mdxType:"UseThrottleExample"})),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-tsx"},'import React, { useState } from "react";\nimport { useThrottle, useToggle, useUpdate } from "@lilib/hooks";\n\nfunction random() {\n  return Math.ceil(Math.random() * 5000);\n}\n\nfunction Example() {\n  const [wait, setWait] = useState(random());\n  const [leading, { toggle: toggleLeading }] = useToggle(false);\n  const [trailing, { toggle: toggleTrailing }] = useToggle(true);\n\n  const [value, setValue] = useState("");\n  const [throttledValue, setThrottledValue] = useState("");\n  const [throttledCallback, { flush, cancel }] = useThrottle(\n    () => {\n      setThrottledValue(value);\n    },\n    { wait, leading, trailing }\n  );\n\n  useUpdate(throttledCallback, [value]);\n\n  return (\n    <>\n      <p>\n        Actions:{" "}\n        <button onClick={() => setWait(random())}>Change wait time</button>\n        <button onClick={() => toggleLeading()}>Toggle leading</button>\n        <button onClick={() => toggleTrailing()}>Toggle trailing</button>\n      </p>\n      <p>\n        Options:{" "}\n        {`{ wait: ${wait}, leading: ${leading}, trailing: ${trailing} }`}\n      </p>\n      <p>\n        Enter value:{" "}\n        <input\n          value={value}\n          onChange={(event) => {\n            setValue(event.target.value);\n          }}\n        />\n        <button onClick={() => flush()}>Flush</button>\n        <button onClick={cancel}>Cancel</button>\n      </p>\n      <div>Throttled value: {throttledValue}</div>\n    </>\n  );\n}\n\nexport default Example;\n')))}h.isMDXComponent=!0}}]);