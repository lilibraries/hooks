"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[4192],{1810:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var o=t(7462),s=(t(7294),t(3905));const l={},a=void 0,c={unversionedId:"useOnce",id:"useOnce",title:"useOnce",description:"Run effect synchronously only once.",source:"@site/docs/useOnce.mdx",sourceDirName:".",slug:"/useOnce",permalink:"/hooks/useOnce",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Getting Started",permalink:"/hooks/"},next:{title:"useMount",permalink:"/hooks/useMount"}},u={},i=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],r={toc:i};function p(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,o.Z)({},r,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Run effect synchronously only once."),(0,s.kt)("h2",{id:"api"},"API"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function useOnce(effect: () => void): void;\n")),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport { useOnce } from "@lilib/hooks";\n\nfunction Example() {\n  useOnce(() => {\n    console.log("Run effect");\n  });\n  ...\n}\n')))}p.isMDXComponent=!0}}]);