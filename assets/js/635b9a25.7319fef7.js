"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[834],{48332:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),s=n(45153),o=n(5122),i=n(58134);const l=function(e){return function(t,n,l){const a=(0,r.useRef)(!1),c=(0,r.useRef)([]),u=(0,r.useRef)([]),f=(0,r.useRef)();function p(){f.current?.()}e((()=>{const e=l.map(s.Z);function r(){c.current=n,u.current=e,f.current=t()}a.current?(0,o.Z)(n,c.current)&&(0,o.Z)(e,u.current)||(p(),r()):(r(),a.current=!0)})),(0,i.Z)((()=>{p(),a.current=!1}))}}},8981:(e,t,n)=>{n.d(t,{Z:()=>i});n(66337);var r=n(45153),s=n(14708),o=n(71211);const i=function(e,t,n){const i=(0,s.Z)(t),{root:l,rootMargin:a,threshold:c}=n||{};(0,o.Z)((()=>{const t=(0,r.Z)(l),n=(0,r.Z)(e);if(!n)return;const s=new IntersectionObserver(i,{root:t,rootMargin:a,threshold:c});return s.observe(n),()=>{s.disconnect()}}),[a,JSON.stringify(c)],[l,e])}},71211:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294);const s=n(64635).Z?r.useLayoutEffect:r.useEffect;const o=(0,n(48332).Z)(s)},14708:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294),s=n(58242);const o=function(e){const t=(0,r.useRef)(),n=(0,s.Z)(e);return t.current||(t.current=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return n.current.apply(this,t)}),t.current}},58134:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(67294);const s=function(e){const t=(0,r.useRef)(e);t.current=e,(0,r.useEffect)((()=>()=>{t.current()}),[])}},16383:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>f,default:()=>v,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var r=n(87462),s=n(67294),o=n(3905),i=n(90814),l=n(67030),a=n(8981);const c=function(){const[e,t]=(0,s.useState)(!1),n=(0,s.useRef)(null),r=(0,s.useRef)(null);return(0,a.Z)(r,(e=>{e&&e[0]&&e[0].isIntersecting?t(!0):t(!1)}),{root:n,threshold:1}),s.createElement("div",{ref:n,style:{height:200,overflow:"auto"}},s.createElement("div",{ref:r,style:{height:100,marginTop:150,marginBottom:150,backgroundColor:e?"orange":"transparent"}},e?"Complete intersection":"Incomplete intersection"))},u={},f=void 0,p={unversionedId:"useIntersectionObserver",id:"useIntersectionObserver",title:"useIntersectionObserver",description:"Observe whether two elements intersect.",source:"@site/docs/useIntersectionObserver.mdx",sourceDirName:".",slug:"/useIntersectionObserver",permalink:"/hooks/useIntersectionObserver",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"useResizeObserver",permalink:"/hooks/useResizeObserver"},next:{title:"useCookie",permalink:"/hooks/useCookie"}},m={},d=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],g={toc:d};function v(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Observe whether two elements intersect."),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function useIntersectionObserver(\n  target: EffectTarget<Element>,\n  listener: (entries: IntersectionObserverEntry[]) => void,\n  options?: {\n    root?: EffectTarget<Element | Document>;\n    rootMargin?: string;\n    threshold?: number | number[];\n  }\n): void;\n\ntype Nullable<T> = T | undefined | null;\ntype EffectTarget<T> =\n  | Nullable<T>\n  | (() => Nullable<T>)\n  | { current: Nullable<T> };\n")),(0,o.kt)("p",null,"Params:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target"),":")," Observe target."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"listener"),":")," Listener function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"options"),":")," See ",(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver"},"IntersectionObserver")," options.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(l.Z,{mdxType:"ExampleBlock"},(0,o.kt)(c,{mdxType:"Example"})),(0,o.kt)(i.Z,{language:"tsx",mdxType:"CodeBlock"},'import React, { useRef, useState } from "react";\nimport { useIntersectionObserver } from "@lilib/hooks";\n\nfunction Example() {\n  const [intersecting, setIntersecting] = useState(false);\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n\n  useIntersectionObserver(\n    targetRef,\n    (entries) => {\n      if (entries && entries[0] && entries[0].isIntersecting) {\n        setIntersecting(true);\n      } else {\n        setIntersecting(false);\n      }\n    },\n    { root: rootRef, threshold: 1 }\n  );\n\n  return (\n    <div\n      ref={rootRef}\n      style={{\n        height: 200,\n        overflow: "auto",\n      }}\n    >\n      <div\n        ref={targetRef}\n        style={{\n          height: 100,\n          marginTop: 150,\n          marginBottom: 150,\n          backgroundColor: intersecting ? "orange" : "transparent",\n        }}\n      >\n        {intersecting ? "Complete intersection" : "Incomplete intersection"}\n      </div>\n    </div>\n  );\n}\n\nexport default Example;\n'))}v.isMDXComponent=!0}}]);