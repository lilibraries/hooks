"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[2407],{48332:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(67294),o=n(45153),s=n(5122),i=n(58134);const u=function(e){return function(t,n,u){const c=(0,r.useRef)(!1),l=(0,r.useRef)([]),a=(0,r.useRef)([]),f=(0,r.useRef)();function m(){f.current?.()}e((()=>{const e=u.map(o.Z);function r(){l.current=n,a.current=e,f.current=t()}c.current?(0,s.Z)(n,l.current)&&(0,s.Z)(e,a.current)||(m(),r()):(r(),c.current=!0)})),(0,i.Z)((()=>{m(),c.current=!1}))}}},8981:(e,t,n)=>{n.d(t,{Z:()=>i});n(66337);var r=n(45153),o=n(14708),s=n(71211);const i=function(e,t,n){const i=(0,o.Z)(t),{root:u,rootMargin:c,threshold:l}=n||{};(0,s.Z)((()=>{const t=(0,r.Z)(u),n=(0,r.Z)(e);if(!n)return;const o=new IntersectionObserver(i,{root:t,rootMargin:c,threshold:l});return o.observe(n),()=>{o.disconnect()}}),[c,JSON.stringify(l)],[u,e])}},71211:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(67294);const o=n(64635).Z?r.useLayoutEffect:r.useEffect;const s=(0,n(48332).Z)(o)},14708:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(67294),o=n(58242);const s=function(e){const t=(0,r.useRef)(),n=(0,o.Z)(e);return t.current||(t.current=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return n.current.apply(this,t)}),t.current}},75912:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),o=n(14708),s=n(72767);const i=function(e){const t=(0,s.Z)(),[n,i]=(0,r.useState)(e);return[n,(0,o.Z)((e=>{t.current||i(e)}))]}},58134:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294);const o=function(e){const t=(0,r.useRef)(e);t.current=e,(0,r.useEffect)((()=>()=>{t.current()}),[])}},72767:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294);const o=function(){const e=(0,r.useRef)(!1);return(0,r.useEffect)((()=>(e.current=!1,()=>{e.current=!0})),[]),e}},65346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>p,default:()=>v,frontMatter:()=>m,metadata:()=>d,toc:()=>h});var r=n(87462),o=n(67294),s=n(3905),i=n(90814),u=n(67030),c=n(75912),l=n(8981);const a=function(e,t){const[n,r]=(0,c.Z)(!1);return(0,l.Z)(e,(e=>{e&&e[0]&&e[0].isIntersecting?r(!0):r(!1)}),t),(0,o.useDebugValue)(n),n};const f=function(){const e=(0,o.useRef)(null),t=(0,o.useRef)(null),n=a(t,{root:e,threshold:1});return o.createElement("div",{ref:e,style:{height:200,overflow:"auto"}},o.createElement("div",{ref:t,style:{height:100,marginTop:150,marginBottom:150,backgroundColor:n?"orange":"transparent"}},n?"Complete intersection":"Incomplete intersection"))},m={},p=void 0,d={unversionedId:"useIntersecting",id:"useIntersecting",title:"useIntersecting",description:"Determine whether two elements intersect.",source:"@site/docs/useIntersecting.mdx",sourceDirName:".",slug:"/useIntersecting",permalink:"/hooks/useIntersecting",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"useElementSize",permalink:"/hooks/useElementSize"},next:{title:"useClickOutside",permalink:"/hooks/useClickOutside"}},g={},h=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],k={toc:h};function v(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Determine whether two elements intersect."),(0,s.kt)("h2",{id:"api"},"API"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function useIntersecting(\n  target: EffectTarget<Element>,\n  options?: {\n    root?: EffectTarget<Element | Document>;\n    rootMargin?: string;\n    threshold?: number | number[];\n  }\n): void;\n\ntype Nullable<T> = T | undefined | null;\ntype EffectTarget<T> =\n  | Nullable<T>\n  | (() => Nullable<T>)\n  | { current: Nullable<T> };\n")),(0,s.kt)("p",null,"Params:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"target"),":")," Observe target."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"options"),":")," See ",(0,s.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver"},"IntersectionObserver")," options.")),(0,s.kt)("p",null,"Results:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A boolean indicates whether the two elements are intersecting.")),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)(u.Z,{mdxType:"ExampleBlock"},(0,s.kt)(f,{mdxType:"Example"})),(0,s.kt)(i.Z,{language:"tsx",mdxType:"CodeBlock"},'import React, { useRef } from "react";\nimport { useIntersecting } from "@lilib/hooks";\n\nfunction Example() {\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n\n  const intersecting = useIntersecting(targetRef, {\n    root: rootRef,\n    threshold: 1,\n  });\n\n  return (\n    <div ref={rootRef} style={{ height: 200, overflow: "auto" }}>\n      <div\n        ref={targetRef}\n        style={{\n          height: 100,\n          marginTop: 150,\n          marginBottom: 150,\n          backgroundColor: intersecting ? "orange" : "transparent",\n        }}\n      >\n        {intersecting ? "Complete intersection" : "Incomplete intersection"}\n      </div>\n    </div>\n  );\n}\n\nexport default Example;\n'))}v.isMDXComponent=!0}}]);