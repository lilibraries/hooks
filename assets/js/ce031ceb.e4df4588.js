"use strict";(self.webpackChunk_lilib_hooks=self.webpackChunk_lilib_hooks||[]).push([[4165],{6997:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=s(7462),n=(s(7294),s(3905));const r={},i=void 0,o={unversionedId:"usePersist",id:"usePersist",title:"usePersist",description:"It returns the same function no matter whether the callback parameter is changed or not. It is used in the same way as the callback.",source:"@site/docs/usePersist.mdx",sourceDirName:".",slug:"/usePersist",permalink:"/hooks/usePersist",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"useMemoizedValue",permalink:"/hooks/useMemoizedValue"},next:{title:"useRerender",permalink:"/hooks/useRerender"}},l={},u=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2}],c={toc:u};function m(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"It returns the same function no matter whether the ",(0,n.kt)("inlineCode",{parentName:"p"},"callback")," parameter is changed or not. It is used in the same way as the ",(0,n.kt)("inlineCode",{parentName:"p"},"callback"),"."),(0,n.kt)("h2",{id:"api"},"API"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"function usePersist<T extends (...args: any[]) => any>(callback: T): T;\n")),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { usePersist } from "@lilib/hooks";\n\nfunction Example() {\n  const callback = usePersist(() => {\n    // Do something.\n  });\n  ...\n}\n')))}m.isMDXComponent=!0}}]);