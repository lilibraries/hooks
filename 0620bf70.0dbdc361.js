(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return a})),n.d(t,"default",(function(){return l}));var s=n(121),u=n(122),o=(n(0),n(120)),r={},i={unversionedId:"usePrevious",id:"usePrevious",isDocsHomePage:!1,title:"usePrevious",description:"Returns a ref object whose .current property is assigned to previous updated value.",source:"@site/docs/usePrevious.mdx",slug:"/usePrevious",permalink:"/hooks/usePrevious",version:"current",sidebar:"docs",previous:{title:"useLastest",permalink:"/hooks/useLastest"},next:{title:"useTitle",permalink:"/hooks/useTitle"}},a=[{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]}],c={toc:a};function l(e){var t=e.components,n=Object(u.a)(e,["components"]);return Object(o.b)("wrapper",Object(s.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Returns a ref object whose ",Object(o.b)("inlineCode",{parentName:"p"},".current")," property is assigned to previous updated value."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function usePrevious<T>(value: T): React.MutableRefObject<T>;\n")),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},'import { useRef } from "react";\nimport { useMounted, usePrevious } from "@lilib/hooks";\n\nfunction useTitle(title: string) {\n  const mountedRef = useMounted();\n  const previousTitleRef = usePrevious(title);\n\n  if (!mountedRef.current || previousTitleRef.current !== title) {\n    document.title = title;\n  }\n}\n\nexport default useTitle;\n')))}l.isMDXComponent=!0}}]);