(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{104:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return g})),t.d(n,"metadata",(function(){return f})),t.d(n,"toc",(function(){return x})),t.d(n,"default",(function(){return h}));var i=t(121),a=t(122),s=t(0),o=t.n(s),r=t(120),u=t(124),l=t(134),c=t.n(l),b=t(6),p=t.n(b),d=t(125);var m=function(){var e=Object(d.j)(),n=Object(s.useState)(["Is page visible: ".concat(e)]),t=p()(n,2),i=t[0],a=t[1];return Object(d.r)((function(){a((function(n){return[].concat(c()(n),["Is page visible: ".concat(e)])}))}),[e]),o.a.createElement("ul",null,i.map((function(e,n){return o.a.createElement("li",{key:n},e)})))},g={},f={unversionedId:"usePageVisible",id:"usePageVisible",isDocsHomePage:!1,title:"usePageVisible",description:"Detect whether the page is visible.",source:"@site/docs/usePageVisible.mdx",slug:"/usePageVisible",permalink:"/hooks/usePageVisible",version:"current",sidebar:"docs",previous:{title:"useDarkMode",permalink:"/hooks/useDarkMode"},next:{title:"useWindowSize",permalink:"/hooks/useWindowSize"}},x=[{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]}],v={toc:x};function h(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},v,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Detect whether the page is visible."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"function usePageVisible(): boolean;\n")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(u.a,{mdxType:"ExampleBox"},Object(r.b)(m,{mdxType:"UsePageVisibleExample"})),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},'import React, { useState } from "react";\nimport { usePageVisible, useUpdate } from "@lilib/hooks";\n\nfunction Example() {\n  const isPageVisible = usePageVisible();\n  const [logs, setLogs] = useState([`Is page visible: ${isPageVisible}`]);\n\n  useUpdate(() => {\n    setLogs((logs) => {\n      return [...logs, `Is page visible: ${isPageVisible}`];\n    });\n  }, [isPageVisible]);\n\n  return (\n    <ul>\n      {logs.map((log, index) => {\n        return <li key={index}>{log}</li>;\n      })}\n    </ul>\n  );\n}\n\nexport default Example;\n')))}h.isMDXComponent=!0},134:function(e,n,t){var i=t(137),a=t(138),s=t(43),o=t(139);e.exports=function(e){return i(e)||a(e)||s(e)||o()}},137:function(e,n,t){var i=t(44);e.exports=function(e){if(Array.isArray(e))return i(e)}},138:function(e,n){e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},139:function(e,n){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}}}]);